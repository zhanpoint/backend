# Generated by Django 4.2.20 on 2025-07-13 20:32

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('email', models.EmailField(blank=True, default=None, max_length=254, null=True, unique=True, verbose_name='邮箱地址')),
                ('phone_number', models.CharField(blank=True, default=None, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator('^1[3-9]\\d{9}$', '请输入正确的手机号')], verbose_name='手机号')),
                ('registration_method', models.CharField(choices=[('email', '邮箱'), ('phone', '手机')], default='email', max_length=10, verbose_name='注册方式')),
                ('timezone', models.CharField(default='Asia/Shanghai', max_length=50, verbose_name='时区')),
                ('dream_privacy_default', models.CharField(choices=[('private', '私人'), ('public', '公开'), ('friends', '好友可见')], default='private', max_length=10, verbose_name='梦境默认隐私设置')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dream',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200, verbose_name='梦境标题')),
                ('content', models.TextField(verbose_name='梦境内容')),
                ('interpretation', models.TextField(blank=True, verbose_name='梦境解析')),
                ('personal_notes', models.TextField(blank=True, verbose_name='个人笔记')),
                ('dream_date', models.DateField(verbose_name='梦境日期')),
                ('lucidity_level', models.IntegerField(choices=[(0, '完全无意识'), (1, '轻微意识'), (2, '部分清醒'), (3, '较为清醒'), (4, '完全清醒'), (5, '超清醒状态')], default=0, verbose_name='清醒度等级')),
                ('mood_before_sleep', models.CharField(blank=True, choices=[('very_negative', '非常消极'), ('negative', '消极'), ('neutral', '中性'), ('positive', '积极'), ('very_positive', '非常积极')], max_length=20, verbose_name='睡前情绪')),
                ('mood_in_dream', models.CharField(blank=True, choices=[('very_negative', '非常消极'), ('negative', '消极'), ('neutral', '中性'), ('positive', '积极'), ('very_positive', '非常积极')], max_length=20, verbose_name='梦中情绪')),
                ('mood_after_waking', models.CharField(blank=True, choices=[('very_negative', '非常消极'), ('negative', '消极'), ('neutral', '中性'), ('positive', '积极'), ('very_positive', '非常积极')], max_length=20, verbose_name='醒后情绪')),
                ('sleep_quality', models.IntegerField(blank=True, choices=[(1, '很差'), (2, '较差'), (3, '一般'), (4, '良好'), (5, '很好')], null=True, verbose_name='睡眠质量')),
                ('sleep_duration', models.DurationField(blank=True, null=True, verbose_name='睡眠时长')),
                ('bedtime', models.TimeField(blank=True, null=True, verbose_name='就寝时间')),
                ('wake_time', models.TimeField(blank=True, null=True, verbose_name='醒来时间')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='是否重复梦')),
                ('recurring_elements', models.TextField(blank=True, verbose_name='重复元素')),
                ('vividness', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True, verbose_name='清晰度(1-5)')),
                ('privacy', models.CharField(choices=[('private', '私人'), ('public', '公开'), ('friends', '好友可见')], default='private', max_length=10, verbose_name='隐私设置')),
                ('is_favorite', models.BooleanField(default=False, verbose_name='是否收藏')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '梦境',
                'verbose_name_plural': '梦境',
                'ordering': ['-dream_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DreamCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('normal', '普通梦境'), ('lucid', '清醒梦'), ('nightmare', '噩梦'), ('recurring', '重复梦'), ('prophetic', '预知梦'), ('healing', '治愈梦'), ('spiritual', '灵性梦境'), ('creative', '创意梦境'), ('hypnagogic', '入睡幻觉'), ('hypnopompic', '醒前幻觉'), ('sleep_paralysis', '睡眠瘫痪'), ('false_awakening', '假醒'), ('anxiety', '焦虑梦'), ('joyful', '快乐梦境'), ('melancholic', '忧郁梦境'), ('adventure', '冒险梦境')], max_length=50, unique=True, verbose_name='分类名称')),
                ('description', models.TextField(blank=True, verbose_name='分类描述')),
                ('color_code', models.CharField(default='#6366f1', max_length=7, verbose_name='颜色代码')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '梦境分类',
                'verbose_name_plural': '梦境分类',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
                ('tag_type', models.CharField(choices=[('emotion', '情感'), ('character', '角色'), ('location', '地点'), ('object', '物体'), ('action', '行为'), ('symbol', '符号'), ('color', '颜色'), ('sound', '声音'), ('weather', '天气'), ('time', '时间'), ('custom', '自定义')], max_length=20, verbose_name='标签类型')),
                ('is_public', models.BooleanField(default=False, verbose_name='是否公共标签')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
            },
        ),
        migrations.CreateModel(
            name='SleepPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='日期')),
                ('bedtime', models.TimeField(verbose_name='就寝时间')),
                ('sleep_time', models.TimeField(blank=True, null=True, verbose_name='入睡时间')),
                ('wake_time', models.TimeField(verbose_name='醒来时间')),
                ('sleep_quality', models.IntegerField(choices=[(1, '很差'), (2, '较差'), (3, '一般'), (4, '良好'), (5, '很好')], verbose_name='睡眠质量')),
                ('total_sleep_time', models.DurationField(blank=True, null=True, verbose_name='总睡眠时间')),
                ('awakenings', models.PositiveIntegerField(default=0, verbose_name='夜间醒来次数')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '睡眠模式',
                'verbose_name_plural': '睡眠模式',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='DreamJournal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='日记本名称')),
                ('description', models.TextField(blank=True, verbose_name='日记本描述')),
                ('color_theme', models.CharField(default='#6366f1', max_length=7, verbose_name='主题颜色')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否默认日记本')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('dreams', models.ManyToManyField(blank=True, to='dream.dream', verbose_name='包含的梦境')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '梦境日记本',
                'verbose_name_plural': '梦境日记本',
            },
        ),
        migrations.CreateModel(
            name='DreamImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_url', models.URLField(max_length=500, verbose_name='图片URL')),
                ('title', models.CharField(blank=True, max_length=200, verbose_name='图片标题')),
                ('description', models.TextField(blank=True, verbose_name='图片描述')),
                ('position', models.PositiveIntegerField(default=0, verbose_name='图片在梦境内容的位置')),
                ('is_ai_generated', models.BooleanField(default=False, verbose_name='是否AI生成')),
                ('generation_prompt', models.TextField(blank=True, verbose_name='生成提示词')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('dream', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='dream.dream', verbose_name='所属梦境')),
            ],
            options={
                'verbose_name': '梦境图片',
                'verbose_name_plural': '梦境图片',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='dream',
            name='categories',
            field=models.ManyToManyField(blank=True, to='dream.dreamcategory', verbose_name='梦境分类'),
        ),
        migrations.AddField(
            model_name='dream',
            name='related_dreams',
            field=models.ManyToManyField(blank=True, to='dream.dream', verbose_name='相关梦境'),
        ),
        migrations.AddField(
            model_name='dream',
            name='tags',
            field=models.ManyToManyField(blank=True, to='dream.tag', verbose_name='标签'),
        ),
        migrations.AddField(
            model_name='dream',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['tag_type'], name='dream_tag_tag_typ_873065_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['is_public'], name='dream_tag_is_publ_f597d7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sleeppattern',
            unique_together={('user', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='dreamjournal',
            unique_together={('user', 'name')},
        ),
        migrations.AddIndex(
            model_name='dream',
            index=models.Index(fields=['user', '-dream_date'], name='dream_dream_user_id_f23988_idx'),
        ),
        migrations.AddIndex(
            model_name='dream',
            index=models.Index(fields=['privacy', '-created_at'], name='dream_dream_privacy_4b47a0_idx'),
        ),
        migrations.AddIndex(
            model_name='dream',
            index=models.Index(fields=['is_favorite', '-created_at'], name='dream_dream_is_favo_b5b2a0_idx'),
        ),
        migrations.AddIndex(
            model_name='dream',
            index=models.Index(fields=['lucidity_level'], name='dream_dream_lucidit_481482_idx'),
        ),
    ]
